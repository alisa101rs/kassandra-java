name: CI
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
jobs:
  build:
    name: Build JNI lib for ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: x86_64-linux
            os: ubuntu-latest
#          - build: aarch64-linux
#            os: ubuntu-latest
#            target: aarch64-unknown-linux-gnu
          - build: x86_64-macos
            os: macos-latest
          - build: aarch64-macos
            os: macos-latest
            target: aarch64-apple-darwin
          - build: x86_64-windows
            os: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-2023-10-05
          override: true
          components: rustfmt
      - name: Set build target for cross-compiling
        if: matrix.target != ''
        run: |
          echo CARGO_BUILD_TARGET=${{ matrix.target }} >> build_env.txt
          echo JNILIB_RUST_TARGET=${{ matrix.target }} >> build_env.txt
          echo GRADLE_ARGS="${GRADLE_ARGS} -x test">> build_env.txt
          echo BUILD_NATIVE=1 >> build_env.txt
          cat build_env.txt >> $GITHUB_ENV
          rustup target add ${{ matrix.target }}


      # Otherwise, run gradle normally to build the JNI lib
      - name: Build with Gradle
        run: ./gradlew copyJniLib ${GRADLE_ARGS} -x test

      - name: Test with Gradle
        run: ./gradlew test

      - name: List shared library files
        run:
          file build/jni-libs/*

      - name: Save JNI lib output
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: jni-libs
          path: build/jni-libs/*
  publishNative:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore JNI libs
        uses: actions/download-artifact@v3
        with:
          name: jni-libs
          path: build/jni-libs
      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            build/jni-libs/libkassandra_jni_macos_x86_64.dylib
            build/jni-libs/libkassandra_jni_macos_aarch64.dylib
            build/jni-libs/libkassandra_jni_linux_x86_64.so
            build/jni-libs/kassandra_jni_windows_x86_64.dll
